#-------------------------------------------------------------------------------------
# Workflow for building and deploying a Jekyll site to GitHub Pages
# 1. Copy the README.md to index.md
# 2. Create Jekyll site
# 3. Deploy to github pages
#-------------------------------------------------------------------------------------

name: Deploy Jekyll site to Pages

on:
  workflow_run:
    workflows: ["update-readme"]
    types:
      - completed

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Jekyll only convert index.md to index.html
      - name: Convert README.md to index.md 
        run: |
          chmod +x .github/scripts/README2index.sh
          .github/scripts/README2index.sh
          cat _config.yml
          cat _layouts/default.html
          cat Gemfile
          cat index.md

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Debug Jekyll Build
        run: |
          echo "Listing files in the root directory:"
          ls -al
          echo "Listing files in the _site directory:"
          ls -al _site

      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

